{"ast":null,"code":"var _jsxFileName = \"/Users/sonyl/Documents/GitHub/nokidszone/src/kakaoMap/kakaoMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from \"styled-components\";\nimport redMarker from '../img/redMarker.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nconst KakaoMap = props => {\n  _s();\n  const container = useRef(); // 맵을 담을 ref 입니다.\n  const [kakaoMap, setKakaoMap] = useState(null); // 카카오맵을 전역에서 쓸수있도록 만든 변수입니다.\n  const [, setClusterer] = useState(); // 마커를 담는 클러스터러입니다. \n  const [markerArr, setMarkerArr] = useState([new kakao.maps.LatLng(37.499590, 127.026374), new kakao.maps.LatLng(37.499427, 127.027947)]); // 마커들의 좌표데이터를 담는 변수입니다.  위 형태로 좌표를 넣으시면 됩니다.\n  const [isMarker, setIsMarker] = useState(false); // 마커 클러스트러 상태 변수입니다.\n\n  const [, setMyClusterer] = useState(); // 내 위치토글을 위해 만든 클러스터러입니다.\n  const [isMy, setIsMy] = useState(false); // 내 위치 토글상태입니다. \n\n  // 로드뷰를 위해 만든 변수들입니다.\n  const rvWrapperRef = useRef();\n  const roadViewRef = useRef();\n  const roadBtnRef = useRef();\n  const [, setRoadClusterer] = useState();\n  const [isRoadView, setIsRoadView] = useState(false);\n\n  // 맵을 생성합니다.\n  useEffect(() => {\n    const center = new kakao.maps.LatLng(37.496463, 127.029358); // 처음 위치를 잡습니다.\n    const options = {\n      center,\n      level: 3 // 처음 줌 거리 낮을수록 줌인\n    };\n\n    const map = new kakao.maps.Map(container.current, options);\n    setKakaoMap(map);\n  }, [container]);\n\n  // 클릭시 클러스터러의 중심좌표를 얻어옵니다.\n  const setCenterClusterer = clusterLocate => {\n    console.log(clusterLocate);\n  };\n\n  // 마커/클러스터러 토글\n  const onClickMarkerToggle = () => {\n    isMarker ? setClusterer(clusterer => {\n      if (!clusterer) {\n        return clusterer;\n      }\n      ;\n      clusterer.clear();\n      return clusterer;\n    }) // 마커, 클러스터러 제거\n    : addMarkClust(markerArr, setClusterer, redMarker, redMarker); // 마커, 클러스터러 추가\n\n    setIsMarker(!isMarker);\n  };\n\n  // 마커/클러스터러를 만들어주는 함수입니다.\n  // (좌표값이 들어있는배열, 클러스터러, 마커이미지, 클러스터러이미지)\n  // 마커이미지, 클러스터러를 비워두면 기본 이미지가 나타납니다.\n  const addMarkClust = (array, setClusterer, markerImg, clustererImg) => {\n    // 마커가 들어있는 배열의 수가 0이면 만들어지지 않아야하기 때문에 return 시킵니다.\n    if (array.length == 0) {\n      return;\n    }\n\n    // 이미지 사이즈 설정입니다.\n    var imageSize = new kakao.maps.Size(20, 30),\n      imageOption = {\n        offset: new kakao.maps.Point(4, 4)\n      };\n    var markerImage = markerImg ? new kakao.maps.MarkerImage(markerImg, imageSize, imageOption) : null;\n\n    // 클러스터러는 마커가 배열에 있어야지만 생성되기 때문에 빈 배열을 생성 후 map()을 통하여 push 합니다.\n    // 하나의 마커를 토글 시키고 싶을 때는 클러스터러에 담고 토글 기능을 추가하면 됩니다. \n    let markers = [];\n    array.map(item => {\n      markers.push(new kakao.maps.Marker({\n        map: kakaoMap,\n        position: new kakao.maps.LatLng(item.Ma, item.La),\n        image: markerImage\n      }));\n    });\n\n    // 클러스터러를 선언합니다.\n    var clusterer = new kakao.maps.MarkerClusterer({\n      map: kakaoMap,\n      // 지도는 state로 만든 kakaoMap 을 사용합니다.\n      averageCenter: true,\n      // 마커의 중간점을 계산하여 클러스터러를 생성합니다.\n      minLevel: 1,\n      //  최소 level 값을 설정합니다.\n      disableClickZoom: true,\n      // 클러스터러를 클릭 시 자동으로 줌인되는것을 막습니다.\n      calculator: [1, 2, 100],\n      // 마커의 개수별로 클러스터러 스타일을 달리하는데 그 기준을 잡습니다.\n      styles: clustererImg &&\n      // calculator의 배열에 맞게 스타일을 잡습니다.\n      [{\n        width: '45px',\n        height: '70px',\n        backgroundImage: `url(${clustererImg})`,\n        // 이미지에 형식에 맞게 넣으시면 됩니다.\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        color: \"salmon\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignCenter: \"center\"\n      }]\n    });\n\n    // 클러스터러에 마커를 추가합니다.\n    clusterer.addMarkers(markers);\n\n    // 클러스터러를 클릭 하였을 때 클러스터러의 좌표값을 가져옵니다.\n    // 해당 기능은 중심 좌표값을 활용하여 주변 건물 좌표를 가져오기 위해 만들었습니다.\n    kakao.maps.event.addListener(clusterer, 'clusterclick', function (cluster) {\n      setCenterClusterer({\n        lat: cluster._center.toLatLng().Ma,\n        lng: cluster._center.toLatLng().La\n      });\n    });\n\n    // 클러스터러를 state로 만들어 외부에서도 접근, 수정 가능하게 만들어줍니다.\n    setClusterer(clusterer);\n  };\n\n  // 내 위치 토글 ( 오차범위 있습니다. )\n  const onClickMy = () => {\n    if (!isMy) {\n      // 마커의 토글을 위하여 클러스터러안에 마커를 담습니다.\n      function displayMarker(locPosition) {\n        let markers = [];\n        var marker = new kakao.maps.Marker({\n          map: kakaoMap,\n          position: locPosition\n        });\n        markers.push(marker);\n        var clusterer = new kakao.maps.MarkerClusterer({\n          map: kakaoMap,\n          averageCenter: true,\n          minLevel: 1,\n          disableClickZoom: true\n        });\n        clusterer.addMarkers(markers);\n        setMyClusterer(clusterer);\n        kakaoMap.setCenter(locPosition);\n      }\n\n      // navigator.geolocation 속성이 있다면 조건문을 실행합니다.\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          var lat = position.coords.latitude,\n            // 위도\n            lon = position.coords.longitude; // 경도\n          var locPosition = new kakao.maps.LatLng(lat, lon);\n          displayMarker(locPosition);\n        });\n      } else {\n        // 만약 브라우저가 geolocation 를 지원하지 않는다면 alert를 실행시킵니다.\n        alert(\"navigator.geolocation 지원하지 않음\");\n      }\n    } else {\n      setMyClusterer(clusterer => {\n        if (!clusterer) {\n          return;\n        }\n        clusterer.clear();\n        return clusterer;\n      });\n    }\n    setIsMy(!isMy);\n  };\n\n  // 로드맵 토글\n  const onClickRoad = () => {\n    if (!isRoadView) {\n      var rv = new kakao.maps.Roadview(roadViewRef.current);\n      var rvClient = new kakao.maps.RoadviewClient();\n      var markImage = new kakao.maps.MarkerImage('https://t1.daumcdn.net/localimg/localimages/07/2018/pc/roadview_minimap_wk_2018.png', new kakao.maps.Size(26, 46), {\n        spriteSize: new kakao.maps.Size(1666, 168),\n        spriteOrigin: new kakao.maps.Point(705, 114),\n        offset: new kakao.maps.Point(13, 46)\n      });\n\n      // 토글기능을 위하여 클러스터러에다가 넣습니다.\n      let markers = [];\n      var rvMarker = new kakao.maps.Marker({\n        image: markImage,\n        draggable: true,\n        map: kakaoMap,\n        position: new kakao.maps.LatLng(37.511138, 126.997544)\n      });\n      markers.push(rvMarker);\n      var clusterer = new kakao.maps.MarkerClusterer({\n        map: kakaoMap,\n        averageCenter: true,\n        minLevel: 1,\n        disableClickZoom: true\n      });\n      clusterer.addMarkers(markers);\n      setRoadClusterer(clusterer);\n      var clickHandler = function (mouseEvent) {\n        var position = mouseEvent.latLng;\n        rvMarker.setPosition(position);\n        toggleRoadview(position);\n      };\n      function toggleRoadview(position) {\n        rvClient.getNearestPanoId(position, 50, function (panoId) {\n          if (panoId === null) {\n            roadViewRef.current.style.display = 'none';\n            rvWrapperRef.current.style.pointerEvents = 'none';\n            kakaoMap.relayout();\n          } else {\n            kakaoMap.relayout();\n            roadViewRef.current.style.display = 'block';\n            rvWrapperRef.current.style.pointerEvents = 'auto';\n            rv.setPanoId(panoId, position);\n            rv.relayout();\n          }\n        });\n      }\n      kakao.maps.event.addListener(kakaoMap, 'click', clickHandler);\n      roadBtnRef.current.addEventListener(\"click\", () => {\n        kakao.maps.event.removeListener(kakaoMap, 'click', clickHandler);\n        setRoadClusterer(clusterer => {\n          clusterer.clear();\n          return clusterer;\n        });\n      });\n      kakaoMap.addOverlayMapTypeId(kakao.maps.MapTypeId.ROADVIEW);\n    } else {\n      kakaoMap.removeOverlayMapTypeId(kakao.maps.MapTypeId.ROADVIEW);\n      roadViewRef.current.style.display = 'none';\n      rvWrapperRef.current.style.pointerEvents = 'none';\n    }\n    setIsRoadView(!isRoadView);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(KakaoMapContainer, {\n      ref: container\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TabWrap, {\n      children: [/*#__PURE__*/_jsxDEV(MarkerToggleBtn, {\n        onClick: onClickMarkerToggle,\n        children: \"\\uB9C8\\uCEE4 \\uD074\\uB7EC\\uC2A4\\uD130\\uB7EC \\uD1A0\\uAE00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MarkerToggleBtn, {\n        onClick: () => kakaoMap.setMapTypeId(kakao.maps.MapTypeId.ROADMAP),\n        children: \"\\uC77C\\uBC18\\uC9C0\\uB3C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MarkerToggleBtn, {\n        onClick: () => kakaoMap.addOverlayMapTypeId(kakao.maps.MapTypeId.USE_DISTRICT),\n        children: \"\\uC9C0\\uC801\\uC9C0\\uB3C4 on\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MarkerToggleBtn, {\n        onClick: () => kakaoMap.removeOverlayMapTypeId(kakao.maps.MapTypeId.USE_DISTRICT),\n        children: \"\\uC9C0\\uC801\\uC9C0\\uB3C4 off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MarkerToggleBtn, {\n        onClick: () => kakaoMap.setMapTypeId(kakao.maps.MapTypeId.HYBRID),\n        children: \"\\uC704\\uC131\\uC9C0\\uB3C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MarkerToggleBtn, {\n        onClick: onClickRoad,\n        ref: roadBtnRef,\n        children: \"\\uB85C\\uB4DC\\uBDF0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MarkerToggleBtn, {\n        onClick: () => kakaoMap.setLevel(kakaoMap.getLevel() - 1),\n        children: \"\\uC90C\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MarkerToggleBtn, {\n        onClick: () => kakaoMap.setLevel(kakaoMap.getLevel() + 1),\n        children: \"\\uC90C\\uC544\\uC6C3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MarkerToggleBtn, {\n        onClick: onClickMy,\n        children: \"\\uB0B4\\uC704\\uCE58\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RvWrapper, {\n      ref: rvWrapperRef,\n      children: /*#__PURE__*/_jsxDEV(RoadViewDiv, {\n        ref: roadViewRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 9\n  }, this);\n};\n_s(KakaoMap, \"l22u4MWMni7U+Qz66y35EAF3haw=\");\n_c = KakaoMap;\nexport default KakaoMap;\n\n// 지도를 표시하는 컴퍼넌트입니다.\n// Container 사이즈 조절을 하시면 됩니다.\nconst Container = styled.div`\n    position: relative;\n    width:100vw;\n    height:100vh;\n`;\n\n// Style -----\n_c2 = Container;\nconst KakaoMapContainer = styled.div`\n    width:100%;\n    height:100%;\n`;\n_c3 = KakaoMapContainer;\nconst TabWrap = styled.div`\n    position: absolute;\n    top:0px;\n    right: 0px;\n    z-index: 30;\n    display: flex;\n    flex-direction: column;\n    background: #fff;\n    width: 180px;\n    padding: 20px;\n    align-items: center;\n`;\n_c4 = TabWrap;\nconst MarkerToggleBtn = styled.button`\n    width: 150px;\n    height: 50px;\n    border:0;\n    cursor: pointer;\n    color: #454545;\n    margin-bottom: 16px;\n    border-radius: 32px;\n    background: #ffffff;\n    box-shadow:  17px 17px 34px #c2c2c2,\n                -17px -17px 34px #ffffff;\n`;\n_c5 = MarkerToggleBtn;\nconst RvWrapper = styled.div`\n  position:absolute;\n  bottom:150px;\n  left:22px;\n  width:650px;\n  height:350px;\n  z-index:0;\n  z-index: 99;\n`;\n_c6 = RvWrapper;\nconst RoadViewDiv = styled.div`\n  width:100%;\n  height:100%;\n`;\n_c7 = RoadViewDiv;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"KakaoMap\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"KakaoMapContainer\");\n$RefreshReg$(_c4, \"TabWrap\");\n$RefreshReg$(_c5, \"MarkerToggleBtn\");\n$RefreshReg$(_c6, \"RvWrapper\");\n$RefreshReg$(_c7, \"RoadViewDiv\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","redMarker","kakao","window","KakaoMap","props","container","kakaoMap","setKakaoMap","setClusterer","markerArr","setMarkerArr","maps","LatLng","isMarker","setIsMarker","setMyClusterer","isMy","setIsMy","rvWrapperRef","roadViewRef","roadBtnRef","setRoadClusterer","isRoadView","setIsRoadView","center","options","level","map","Map","current","setCenterClusterer","clusterLocate","console","log","onClickMarkerToggle","clusterer","clear","addMarkClust","array","markerImg","clustererImg","length","imageSize","Size","imageOption","offset","Point","markerImage","MarkerImage","markers","item","push","Marker","position","Ma","La","image","MarkerClusterer","averageCenter","minLevel","disableClickZoom","calculator","styles","width","height","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","color","display","justifyContent","alignCenter","addMarkers","event","addListener","cluster","lat","_center","toLatLng","lng","onClickMy","displayMarker","locPosition","marker","setCenter","navigator","geolocation","getCurrentPosition","coords","latitude","lon","longitude","alert","onClickRoad","rv","Roadview","rvClient","RoadviewClient","markImage","spriteSize","spriteOrigin","rvMarker","draggable","clickHandler","mouseEvent","latLng","setPosition","toggleRoadview","getNearestPanoId","panoId","style","pointerEvents","relayout","setPanoId","addEventListener","removeListener","addOverlayMapTypeId","MapTypeId","ROADVIEW","removeOverlayMapTypeId","setMapTypeId","ROADMAP","USE_DISTRICT","HYBRID","setLevel","getLevel","Container","div","KakaoMapContainer","TabWrap","MarkerToggleBtn","button","RvWrapper","RoadViewDiv"],"sources":["/Users/sonyl/Documents/GitHub/nokidszone/src/kakaoMap/kakaoMap.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nimport styled from \"styled-components\"\n\nimport redMarker from '../img/redMarker.png';\n\nconst { kakao } = window;\n\nconst KakaoMap = (props) => {\n    const container = useRef(); // 맵을 담을 ref 입니다.\n    const [kakaoMap, setKakaoMap] = useState(null); // 카카오맵을 전역에서 쓸수있도록 만든 변수입니다.\n    const [, setClusterer] = useState(); // 마커를 담는 클러스터러입니다. \n    const [markerArr, setMarkerArr] = useState([\n        new kakao.maps.LatLng(37.499590, 127.026374),\n        new kakao.maps.LatLng(37.499427, 127.027947),\n    ]); // 마커들의 좌표데이터를 담는 변수입니다.  위 형태로 좌표를 넣으시면 됩니다.\n    const [isMarker, setIsMarker] = useState(false); // 마커 클러스트러 상태 변수입니다.\n\n    const [, setMyClusterer] = useState(); // 내 위치토글을 위해 만든 클러스터러입니다.\n    const [isMy, setIsMy] = useState(false); // 내 위치 토글상태입니다. \n\n    // 로드뷰를 위해 만든 변수들입니다.\n    const rvWrapperRef = useRef();\n    const roadViewRef = useRef();\n    const roadBtnRef = useRef();\n    const [, setRoadClusterer] = useState();\n    const [isRoadView, setIsRoadView] = useState(false);\n\n    // 맵을 생성합니다.\n    useEffect(() => {\n        const center = new kakao.maps.LatLng( 37.496463, 127.029358); // 처음 위치를 잡습니다.\n        const options = {\n        center,\n        level: 3  // 처음 줌 거리 낮을수록 줌인\n        };\n    \n        const map = new kakao.maps.Map(container.current, options); \n        setKakaoMap(map); \n    }, [container]);\n\n    // 클릭시 클러스터러의 중심좌표를 얻어옵니다.\n    const setCenterClusterer = (clusterLocate) => {\n        console.log(clusterLocate);\n    }\n\n    // 마커/클러스터러 토글\n    const onClickMarkerToggle = () => {\n        isMarker?\n        setClusterer(clusterer=>{if(!clusterer){return clusterer}; clusterer.clear(); return clusterer;}) // 마커, 클러스터러 제거\n        :\n        addMarkClust(markerArr, setClusterer, redMarker, redMarker) // 마커, 클러스터러 추가\n        \n        setIsMarker(!isMarker);\n    }\n\n    // 마커/클러스터러를 만들어주는 함수입니다.\n    // (좌표값이 들어있는배열, 클러스터러, 마커이미지, 클러스터러이미지)\n    // 마커이미지, 클러스터러를 비워두면 기본 이미지가 나타납니다.\n    const addMarkClust = (array, setClusterer, markerImg, clustererImg) => {\n        // 마커가 들어있는 배열의 수가 0이면 만들어지지 않아야하기 때문에 return 시킵니다.\n        if(array.length == 0){return;}\n\n        // 이미지 사이즈 설정입니다.\n        var imageSize = new kakao.maps.Size(20, 30),\n            imageOption = {offset: new kakao.maps.Point(4, 4)};\n        var markerImage = markerImg?new kakao.maps.MarkerImage(markerImg, imageSize, imageOption):null;\n    \n        // 클러스터러는 마커가 배열에 있어야지만 생성되기 때문에 빈 배열을 생성 후 map()을 통하여 push 합니다.\n        // 하나의 마커를 토글 시키고 싶을 때는 클러스터러에 담고 토글 기능을 추가하면 됩니다. \n        let markers = [];\n        array.map(item => {\n            markers.push(\n            new kakao.maps.Marker({\n                map: kakaoMap, \n                position: new kakao.maps.LatLng(item.Ma, item.La),\n                image: markerImage \n            })\n            );\n        })\n\n        // 클러스터러를 선언합니다.\n        var clusterer = new kakao.maps.MarkerClusterer({\n            map: kakaoMap,  // 지도는 state로 만든 kakaoMap 을 사용합니다.\n            averageCenter: true, // 마커의 중간점을 계산하여 클러스터러를 생성합니다.\n            minLevel: 1,  //  최소 level 값을 설정합니다.\n            disableClickZoom: true,  // 클러스터러를 클릭 시 자동으로 줌인되는것을 막습니다.\n            calculator: [1, 2, 100],  // 마커의 개수별로 클러스터러 스타일을 달리하는데 그 기준을 잡습니다.\n            styles: clustererImg&& // calculator의 배열에 맞게 스타일을 잡습니다.\n            [\n                {\n                    width:'45px', height:'70px',\n                    backgroundImage: `url(${clustererImg})`, // 이미지에 형식에 맞게 넣으시면 됩니다.\n                    backgroundPosition: 'center',\n                    backgroundSize: 'cover',\n                    backgroundRepeat: 'no-repeat',\n                    color:\"salmon\",\n                    display: \"flex\",\n                    justifyContent:\"center\",\n                    alignCenter:\"center\",\n                },\n            ]\n            \n        });\n\n        // 클러스터러에 마커를 추가합니다.\n        clusterer.addMarkers(markers);\n    \n        // 클러스터러를 클릭 하였을 때 클러스터러의 좌표값을 가져옵니다.\n        // 해당 기능은 중심 좌표값을 활용하여 주변 건물 좌표를 가져오기 위해 만들었습니다.\n        kakao.maps.event.addListener(clusterer, 'clusterclick', function(cluster) {\n            setCenterClusterer({\n            lat:cluster._center.toLatLng().Ma,\n            lng:cluster._center.toLatLng().La\n            })\n        });\n    \n        // 클러스터러를 state로 만들어 외부에서도 접근, 수정 가능하게 만들어줍니다.\n        setClusterer(clusterer);\n    }\n\n    // 내 위치 토글 ( 오차범위 있습니다. )\n   const onClickMy = () => {\n        if(!isMy){\n      \n          // 마커의 토글을 위하여 클러스터러안에 마커를 담습니다.\n          function displayMarker(locPosition) {\n            let markers = [];\n            var marker = new kakao.maps.Marker({  \n                map: kakaoMap, \n                position: locPosition\n            });\n            markers.push(marker);\n      \n            var clusterer = new kakao.maps.MarkerClusterer({\n              map: kakaoMap,\n              averageCenter: true, \n              minLevel: 1,\n              disableClickZoom: true,\n            });\n            clusterer.addMarkers(markers);\n            setMyClusterer(clusterer);\n            kakaoMap.setCenter(locPosition);      \n          }\n      \n          // navigator.geolocation 속성이 있다면 조건문을 실행합니다.\n          if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(function(position) {\n                var lat = position.coords.latitude, // 위도\n                    lon = position.coords.longitude; // 경도\n                var locPosition = new kakao.maps.LatLng(lat, lon);\n                displayMarker(locPosition);\n              });\n          }else{ \n            // 만약 브라우저가 geolocation 를 지원하지 않는다면 alert를 실행시킵니다.\n            alert(\"navigator.geolocation 지원하지 않음\")\n          }\n        }else{\n            setMyClusterer(clusterer=>{ if(!clusterer){return} clusterer.clear(); return clusterer;})\n        }\n        setIsMy(!isMy);\n    }\n\n    // 로드맵 토글\n    const onClickRoad = () => {\n\n        if(!isRoadView){\n            var rv = new kakao.maps.Roadview(roadViewRef.current); \n            var rvClient = new kakao.maps.RoadviewClient();\n\n            var markImage = new kakao.maps.MarkerImage(\n                'https://t1.daumcdn.net/localimg/localimages/07/2018/pc/roadview_minimap_wk_2018.png',\n                new kakao.maps.Size(26, 46),\n                {\n                    spriteSize: new kakao.maps.Size(1666, 168),\n                    spriteOrigin: new kakao.maps.Point(705, 114),\n                    offset: new kakao.maps.Point(13, 46)\n                }\n            );\n\n            // 토글기능을 위하여 클러스터러에다가 넣습니다.\n            let markers = [];\n            var rvMarker = new kakao.maps.Marker({\n                image : markImage,\n                draggable: true,\n                map: kakaoMap,\n                position: new kakao.maps.LatLng(37.511138, 126.997544)\n            });\n            markers.push(rvMarker);\n            var clusterer = new kakao.maps.MarkerClusterer({\n                map: kakaoMap,\n                averageCenter: true, \n                minLevel: 1,\n                disableClickZoom: true,\n            });\n            clusterer.addMarkers(markers);\n            setRoadClusterer(clusterer);\n\n            var clickHandler = function(mouseEvent) {    \n                var position = mouseEvent.latLng; \n                rvMarker.setPosition(position);\n                toggleRoadview(position);\n            }; \n\n            function toggleRoadview(position){\n                rvClient.getNearestPanoId(position, 50, function(panoId) {\n                    if (panoId === null) {\n                    roadViewRef.current.style.display = 'none';\n                    rvWrapperRef.current.style.pointerEvents  = 'none';\n                    kakaoMap.relayout();\n                    } else {\n                    kakaoMap.relayout();\n                    roadViewRef.current.style.display = 'block'; \n                    rvWrapperRef.current.style.pointerEvents  = 'auto';\n                    rv.setPanoId(panoId, position);\n                    rv.relayout();\n                    }\n                });\n            }\n\n            kakao.maps.event.addListener(kakaoMap, 'click', clickHandler);\n            roadBtnRef.current.addEventListener(\"click\", () => {\n            kakao.maps.event.removeListener(kakaoMap, 'click', clickHandler);\n            setRoadClusterer(clusterer=>{clusterer.clear(); return clusterer;})\n            })\n            kakaoMap.addOverlayMapTypeId(kakao.maps.MapTypeId.ROADVIEW);\n        }else{\n            kakaoMap.removeOverlayMapTypeId(kakao.maps.MapTypeId.ROADVIEW);\n            roadViewRef.current.style.display = 'none';\n            rvWrapperRef.current.style.pointerEvents = 'none';\n        }\n\n        setIsRoadView(!isRoadView);\n\n    }\n\n\n    return(\n        <Container>\n            <KakaoMapContainer ref={container} />\n            <TabWrap>\n                <MarkerToggleBtn onClick={onClickMarkerToggle}>마커 클러스터러 토글</MarkerToggleBtn>\n                <MarkerToggleBtn onClick={() => kakaoMap.setMapTypeId(kakao.maps.MapTypeId.ROADMAP) }>일반지도</MarkerToggleBtn>\n                <MarkerToggleBtn onClick={() => kakaoMap.addOverlayMapTypeId(kakao.maps.MapTypeId.USE_DISTRICT) }>지적지도 on</MarkerToggleBtn>\n                <MarkerToggleBtn onClick={() => kakaoMap.removeOverlayMapTypeId(kakao.maps.MapTypeId.USE_DISTRICT) }>지적지도 off</MarkerToggleBtn>\n                <MarkerToggleBtn onClick={() => kakaoMap.setMapTypeId(kakao.maps.MapTypeId.HYBRID) }>위성지도</MarkerToggleBtn>\n                <MarkerToggleBtn onClick={onClickRoad} ref={roadBtnRef}>로드뷰</MarkerToggleBtn>\n                <MarkerToggleBtn onClick={() => kakaoMap.setLevel(kakaoMap.getLevel() - 1) }>줌인</MarkerToggleBtn>\n                <MarkerToggleBtn onClick={() => kakaoMap.setLevel(kakaoMap.getLevel() + 1) }>줌아웃</MarkerToggleBtn>\n                <MarkerToggleBtn onClick={onClickMy}>내위치</MarkerToggleBtn>\n\n            </TabWrap>\n            <RvWrapper ref={rvWrapperRef}>\n                <RoadViewDiv ref={roadViewRef}></RoadViewDiv>\n            </RvWrapper>\n        </Container>\n    )\n};\n\nexport default KakaoMap;\n\n// 지도를 표시하는 컴퍼넌트입니다.\n// Container 사이즈 조절을 하시면 됩니다.\nconst Container = styled.div`\n    position: relative;\n    width:100vw;\n    height:100vh;\n`\n\n\n// Style -----\nconst KakaoMapContainer = styled.div`\n    width:100%;\n    height:100%;\n`\nconst TabWrap = styled.div`\n    position: absolute;\n    top:0px;\n    right: 0px;\n    z-index: 30;\n    display: flex;\n    flex-direction: column;\n    background: #fff;\n    width: 180px;\n    padding: 20px;\n    align-items: center;\n`\nconst MarkerToggleBtn = styled.button`\n    width: 150px;\n    height: 50px;\n    border:0;\n    cursor: pointer;\n    color: #454545;\n    margin-bottom: 16px;\n    border-radius: 32px;\n    background: #ffffff;\n    box-shadow:  17px 17px 34px #c2c2c2,\n                -17px -17px 34px #ffffff;\n`\nconst RvWrapper = styled.div`\n  position:absolute;\n  bottom:150px;\n  left:22px;\n  width:650px;\n  height:350px;\n  z-index:0;\n  z-index: 99;\n`\n\nconst RoadViewDiv = styled.div`\n  width:100%;\n  height:100%;\n`"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}