{"ast":null,"code":"var _jsxFileName = \"/Users/sonyl/Documents/GitHub/nokidszone/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nvar mapOptions = {\n  center: new naver.maps.LatLng(37.3595704, 127.105399),\n  //지도 초기 중심 좌표\n  zoom: 10,\n  //지도의 초기 줌 레벨\n  minZoom: 10,\n  //지도의 최소 줌 레벨\n  zoomControl: true,\n  //줌 컨트롤의 표시 여부\n  zoomControlOptions: {\n    position: naver.maps.Position.LEFT_BOTTOM\n  }\n};\nvar infoWindow = new naver.maps.InfoWindow({\n  anchorSkew: true\n});\nvar map = new naver.maps.Map('map', mapOptions);\nfunction searchAddressToCoordinate(address) {\n  naver.maps.Service.geocode({\n    query: address\n  }, function (status, response) {\n    if (status === naver.maps.Service.Status.ERROR) {\n      return alert('Something Wrong!');\n    }\n    if (response.v2.meta.totalCount === 0) {\n      return alert('totalCount' + response.v2.meta.totalCount);\n    }\n    var htmlAddresses = [],\n      item = response.v2.addresses[0],\n      point = new naver.maps.Point(item.x, item.y);\n    if (item.roadAddress) {\n      htmlAddresses.push('[도로명 주소] ' + item.roadAddress);\n    }\n    if (item.jibunAddress) {\n      htmlAddresses.push('[지번 주소] ' + item.jibunAddress);\n    }\n    if (item.englishAddress) {\n      htmlAddresses.push('[영문명 주소] ' + item.englishAddress);\n    }\n    infoWindow.setContent(['<div style=\"padding:10px;min-width:200px;line-height:150%;\">', '<h4 style=\"margin-top:5px;\">검색 주소 : ' + address + '</h4><br />', htmlAddresses.join('<br />'), '</div>'].join('\\n'));\n    map.setCenter(point);\n    infoWindow.open(map, point);\n  });\n}\nfunction initGeocoder() {\n  map.addListener('click', function (e) {\n    searchCoordinateToAddress(e.coord);\n  });\n  $('#address').on('keydown', function (e) {\n    var keyCode = e.which;\n    if (keyCode === 13) {\n      // Enter Key\n      searchAddressToCoordinate($('#address').val());\n    }\n  });\n  $('#submit').on('click', function (e) {\n    e.preventDefault();\n    searchAddressToCoordinate($('#address').val());\n  });\n  searchAddressToCoordinate('정자동 178-1');\n}\nfunction makeAddress(item) {\n  if (!item) {\n    return;\n  }\n  var name = item.name,\n    region = item.region,\n    land = item.land,\n    isRoadAddress = name === 'roadaddr';\n  var sido = '',\n    sigugun = '',\n    dongmyun = '',\n    ri = '',\n    rest = '';\n  if (hasArea(region.area1)) {\n    sido = region.area1.name;\n  }\n  if (hasArea(region.area2)) {\n    sigugun = region.area2.name;\n  }\n  if (hasArea(region.area3)) {\n    dongmyun = region.area3.name;\n  }\n  if (hasArea(region.area4)) {\n    ri = region.area4.name;\n  }\n  if (land) {\n    if (hasData(land.number1)) {\n      if (hasData(land.type) && land.type === '2') {\n        rest += '산';\n      }\n      rest += land.number1;\n      if (hasData(land.number2)) {\n        rest += '-' + land.number2;\n      }\n    }\n    if (isRoadAddress === true) {\n      if (checkLastString(dongmyun, '면')) {\n        ri = land.name;\n      } else {\n        dongmyun = land.name;\n        ri = '';\n      }\n      if (hasAddition(land.addition0)) {\n        rest += ' ' + land.addition0.value;\n      }\n    }\n  }\n  return [sido, sigugun, dongmyun, ri, rest].join(' ');\n}\nfunction hasArea(area) {\n  return !!(area && area.name && area.name !== '');\n}\nfunction hasData(data) {\n  return !!(data && data !== '');\n}\nfunction checkLastString(word, lastString) {\n  return new RegExp(lastString + '$').test(word);\n}\nfunction hasAddition(addition) {\n  return !!(addition && addition.value);\n}\nnaver.maps.onJSContentLoaded = initGeocoder;","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","root","createRoot","document","getElementById","render","mapOptions","center","naver","maps","LatLng","zoom","minZoom","zoomControl","zoomControlOptions","position","Position","LEFT_BOTTOM","infoWindow","InfoWindow","anchorSkew","map","Map","searchAddressToCoordinate","address","Service","geocode","query","status","response","Status","ERROR","alert","v2","meta","totalCount","htmlAddresses","item","addresses","point","Point","x","y","roadAddress","push","jibunAddress","englishAddress","setContent","join","setCenter","open","initGeocoder","addListener","e","searchCoordinateToAddress","coord","$","on","keyCode","which","val","preventDefault","makeAddress","name","region","land","isRoadAddress","sido","sigugun","dongmyun","ri","rest","hasArea","area1","area2","area3","area4","hasData","number1","type","number2","checkLastString","hasAddition","addition0","value","area","data","word","lastString","RegExp","test","addition","onJSContentLoaded"],"sources":["/Users/sonyl/Documents/GitHub/nokidszone/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nvar mapOptions = {\n  center: new naver.maps.LatLng(37.3595704, 127.105399),\t//지도 초기 중심 좌표\n  zoom: 10,\t//지도의 초기 줌 레벨\n  minZoom: 10,\t//지도의 최소 줌 레벨\n  zoomControl: true,\t//줌 컨트롤의 표시 여부\n  zoomControlOptions: {\n    position: naver.maps.Position.LEFT_BOTTOM\n  }\n\n};\nvar infoWindow = new naver.maps.InfoWindow({\nanchorSkew: true\n});\nvar map = new naver.maps.Map('map', mapOptions);\n\nfunction searchAddressToCoordinate(address) {\n  naver.maps.Service.geocode({\n      query: address\n  }, function(status, response) {\n      if (status === naver.maps.Service.Status.ERROR) {\n          return alert('Something Wrong!');\n      }\n\n      if (response.v2.meta.totalCount === 0) {\n          return alert('totalCount' + response.v2.meta.totalCount);\n      }\n\n      var htmlAddresses = [],\n          item = response.v2.addresses[0],\n          point = new naver.maps.Point(item.x, item.y);\n\n      if (item.roadAddress) {\n          htmlAddresses.push('[도로명 주소] ' + item.roadAddress);\n      }\n\n      if (item.jibunAddress) {\n          htmlAddresses.push('[지번 주소] ' + item.jibunAddress);\n      }\n\n      if (item.englishAddress) {\n          htmlAddresses.push('[영문명 주소] ' + item.englishAddress);\n      }\n\n      infoWindow.setContent([\n          '<div style=\"padding:10px;min-width:200px;line-height:150%;\">',\n          '<h4 style=\"margin-top:5px;\">검색 주소 : '+ address +'</h4><br />',\n          htmlAddresses.join('<br />'),\n          '</div>'\n      ].join('\\n'));\n\n      map.setCenter(point);\n      infoWindow.open(map, point);\n  });\n}\n\nfunction initGeocoder() {\n  map.addListener('click', function(e) {\n      searchCoordinateToAddress(e.coord);\n  });\n\n  $('#address').on('keydown', function(e) {\n      var keyCode = e.which;\n\n      if (keyCode === 13) { // Enter Key\n          searchAddressToCoordinate($('#address').val());\n      }\n  });\n\n  $('#submit').on('click', function(e) {\n      e.preventDefault();\n\n      searchAddressToCoordinate($('#address').val());\n  });\n\n  searchAddressToCoordinate('정자동 178-1');\n}\n\nfunction makeAddress(item) {\n  if (!item) {\n      return;\n  }\n\n  var name = item.name,\n      region = item.region,\n      land = item.land,\n      isRoadAddress = name === 'roadaddr';\n\n  var sido = '', sigugun = '', dongmyun = '', ri = '', rest = '';\n\n  if (hasArea(region.area1)) {\n      sido = region.area1.name;\n  }\n\n  if (hasArea(region.area2)) {\n      sigugun = region.area2.name;\n  }\n\n  if (hasArea(region.area3)) {\n      dongmyun = region.area3.name;\n  }\n\n  if (hasArea(region.area4)) {\n      ri = region.area4.name;\n  }\n\n  if (land) {\n      if (hasData(land.number1)) {\n          if (hasData(land.type) && land.type === '2') {\n              rest += '산';\n          }\n\n          rest += land.number1;\n\n          if (hasData(land.number2)) {\n              rest += ('-' + land.number2);\n          }\n      }\n\n      if (isRoadAddress === true) {\n          if (checkLastString(dongmyun, '면')) {\n              ri = land.name;\n          } else {\n              dongmyun = land.name;\n              ri = '';\n          }\n\n          if (hasAddition(land.addition0)) {\n              rest += ' ' + land.addition0.value;\n          }\n      }\n  }\n\n  return [sido, sigugun, dongmyun, ri, rest].join(' ');\n}\n\nfunction hasArea(area) {\n  return !!(area && area.name && area.name !== '');\n}\n\nfunction hasData(data) {\n  return !!(data && data !== '');\n}\n\nfunction checkLastString (word, lastString) {\n  return new RegExp(lastString + '$').test(word);\n}\n\nfunction hasAddition (addition) {\n  return !!(addition && addition.value);\n}\n\nnaver.maps.onJSContentLoaded = initGeocoder;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}