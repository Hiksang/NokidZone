{"ast":null,"code":"var _jsxFileName = \"/Users/sonyl/Documents/GitHub/nokidszone/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { MapMarker, Map } from \"react-kakao-maps-sdk\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const markerdata = [{\n  title: \"콜드스퀘어\",\n  lat: 37.62197524055062,\n  lng: 127.16017523675508\n}, {\n  title: \"오륙도\",\n  lat: 35.0938,\n  lng: 129.1264\n}, {\n  title: \"울산대학교\",\n  lat: 35.5441,\n  lng: 129.2563\n}, {\n  title: \"대전 오월드\",\n  lat: 36.2887,\n  lng: 127.3978\n}, {\n  title: \"광주공항\",\n  lat: 35.1399,\n  lng: 126.811\n}, {\n  title: \"경포대 해변\",\n  lat: 37.8055,\n  lng: 128.9078\n}];\nexport default function App() {\n  _s();\n  useEffect(() => {\n    mapscript();\n  }, []);\n  const mapscript = () => {\n    let container = document.getElementById(\"map\");\n    let options = {\n      center: new kakao.maps.LatLng(37.624915253753194, 127.15122688059974),\n      level: 5\n    };\n\n    //map\n    const map = new kakao.maps.Map(container, options);\n    markerdata.forEach(el => {\n      // 마커를 생성합니다\n      const marker = new kakao.maps.Marker({\n        //마커가 표시 될 지도\n        map: map,\n        //마커가 표시 될 위치\n        position: new kakao.maps.LatLng(el.lat, el.lng)\n      });\n      // 마커에 표시할 인포윈도우를 생성합니다\n      var infowindow = new kakao.maps.InfoWindow({\n        content: el.title // 인포윈도우에 표시할 내용\n      });\n\n      // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다\n      // 이벤트 리스너로는 클로저를 만들어 등록합니다\n      // 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다\n      kakao.maps.event.addListener(marker, \"mouseover\", makeOverListener(map, marker, infowindow));\n      kakao.maps.event.addListener(marker, \"mouseout\", makeOutListener(infowindow));\n    });\n    // 인포윈도우를 표시하는 클로저를 만드는 함수입니다\n    function makeOverListener(map, marker, infowindow) {\n      return function () {\n        infowindow.open(map, marker);\n      };\n    }\n\n    // 인포윈도우를 닫는 클로저를 만드는 함수입니다\n    function makeOutListener(infowindow) {\n      return function () {\n        infowindow.close();\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","MapMarker","Map","markerdata","title","lat","lng","App","mapscript","container","document","getElementById","options","center","kakao","maps","LatLng","level","map","forEach","el","marker","Marker","position","infowindow","InfoWindow","content","event","addListener","makeOverListener","makeOutListener","open","close","width","height"],"sources":["/Users/sonyl/Documents/GitHub/nokidszone/src/App.js"],"sourcesContent":["import React, {useEffect} from \"react\";\nimport { MapMarker, Map } from \"react-kakao-maps-sdk\";\n\nexport const markerdata = [\n  {\n      title: \"콜드스퀘어\",\n      lat: 37.62197524055062,\n      lng: 127.16017523675508\n  },\n  {\n      title: \"오륙도\",\n      lat: 35.0938,\n      lng: 129.1264\n  },\n  {\n      title: \"울산대학교\",\n      lat: 35.5441,\n      lng: 129.2563\n  },\n  {\n      title: \"대전 오월드\",\n      lat: 36.2887,\n      lng: 127.3978\n  },\n  {\n      title: \"광주공항\",\n      lat: 35.1399,\n      lng: 126.811\n  },\n  {\n      title: \"경포대 해변\",\n      lat: 37.8055,\n      lng: 128.9078\n  }\n];\nexport default function App() {\n  useEffect(() => {\n    mapscript();\n  }, []);\n\n  const mapscript = () => {\n    let container = document.getElementById(\"map\");\n    let options = {\n      center: new kakao.maps.LatLng(37.624915253753194, 127.15122688059974),\n      level: 5,\n    };\n\n    //map\n    const map = new kakao.maps.Map(container, options);\n    markerdata.forEach((el) => {\n      // 마커를 생성합니다\n      const marker = new kakao.maps.Marker({\n        //마커가 표시 될 지도\n        map: map,\n        //마커가 표시 될 위치\n        position: new kakao.maps.LatLng(el.lat, el.lng),\n      });\n      // 마커에 표시할 인포윈도우를 생성합니다\n      var infowindow = new kakao.maps.InfoWindow({\n        content: el.title, // 인포윈도우에 표시할 내용\n      });\n\n      // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다\n      // 이벤트 리스너로는 클로저를 만들어 등록합니다\n      // 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다\n      kakao.maps.event.addListener(\n        marker,\n        \"mouseover\",\n        makeOverListener(map, marker, infowindow)\n      );\n      kakao.maps.event.addListener(\n        marker,\n        \"mouseout\",\n        makeOutListener(infowindow)\n      );\n    });\n    // 인포윈도우를 표시하는 클로저를 만드는 함수입니다\n    function makeOverListener(map, marker, infowindow) {\n      return function () {\n        infowindow.open(map, marker);\n      };\n    }\n\n    // 인포윈도우를 닫는 클로저를 만드는 함수입니다\n    function makeOutListener(infowindow) {\n      return function () {\n        infowindow.close();\n      };\n    }\n  };\n\n  return <div id=\"map\" style={{ width: \"100vw\", height: \"100vh\" }}></div>;\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAASC,SAAS,EAAEC,GAAG,QAAQ,sBAAsB;AAAC;AAEtD,OAAO,MAAMC,UAAU,GAAG,CACxB;EACIC,KAAK,EAAE,OAAO;EACdC,GAAG,EAAE,iBAAiB;EACtBC,GAAG,EAAE;AACT,CAAC,EACD;EACIF,KAAK,EAAE,KAAK;EACZC,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE;AACT,CAAC,EACD;EACIF,KAAK,EAAE,OAAO;EACdC,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE;AACT,CAAC,EACD;EACIF,KAAK,EAAE,QAAQ;EACfC,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE;AACT,CAAC,EACD;EACIF,KAAK,EAAE,MAAM;EACbC,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE;AACT,CAAC,EACD;EACIF,KAAK,EAAE,QAAQ;EACfC,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE;AACT,CAAC,CACF;AACD,eAAe,SAASC,GAAG,GAAG;EAAA;EAC5BP,SAAS,CAAC,MAAM;IACdQ,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAM;IACtB,IAAIC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;IAC9C,IAAIC,OAAO,GAAG;MACZC,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAI,CAACC,MAAM,CAAC,kBAAkB,EAAE,kBAAkB,CAAC;MACrEC,KAAK,EAAE;IACT,CAAC;;IAED;IACA,MAAMC,GAAG,GAAG,IAAIJ,KAAK,CAACC,IAAI,CAACb,GAAG,CAACO,SAAS,EAAEG,OAAO,CAAC;IAClDT,UAAU,CAACgB,OAAO,CAAEC,EAAE,IAAK;MACzB;MACA,MAAMC,MAAM,GAAG,IAAIP,KAAK,CAACC,IAAI,CAACO,MAAM,CAAC;QACnC;QACAJ,GAAG,EAAEA,GAAG;QACR;QACAK,QAAQ,EAAE,IAAIT,KAAK,CAACC,IAAI,CAACC,MAAM,CAACI,EAAE,CAACf,GAAG,EAAEe,EAAE,CAACd,GAAG;MAChD,CAAC,CAAC;MACF;MACA,IAAIkB,UAAU,GAAG,IAAIV,KAAK,CAACC,IAAI,CAACU,UAAU,CAAC;QACzCC,OAAO,EAAEN,EAAE,CAAChB,KAAK,CAAE;MACrB,CAAC,CAAC;;MAEF;MACA;MACA;MACAU,KAAK,CAACC,IAAI,CAACY,KAAK,CAACC,WAAW,CAC1BP,MAAM,EACN,WAAW,EACXQ,gBAAgB,CAACX,GAAG,EAAEG,MAAM,EAAEG,UAAU,CAAC,CAC1C;MACDV,KAAK,CAACC,IAAI,CAACY,KAAK,CAACC,WAAW,CAC1BP,MAAM,EACN,UAAU,EACVS,eAAe,CAACN,UAAU,CAAC,CAC5B;IACH,CAAC,CAAC;IACF;IACA,SAASK,gBAAgB,CAACX,GAAG,EAAEG,MAAM,EAAEG,UAAU,EAAE;MACjD,OAAO,YAAY;QACjBA,UAAU,CAACO,IAAI,CAACb,GAAG,EAAEG,MAAM,CAAC;MAC9B,CAAC;IACH;;IAEA;IACA,SAASS,eAAe,CAACN,UAAU,EAAE;MACnC,OAAO,YAAY;QACjBA,UAAU,CAACQ,KAAK,EAAE;MACpB,CAAC;IACH;EACF,CAAC;EAED,oBAAO;IAAK,EAAE,EAAC,KAAK;IAAC,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAA;IAAA;IAAA;EAAA,QAAO;AACzE;AAAC,GAzDuB3B,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}